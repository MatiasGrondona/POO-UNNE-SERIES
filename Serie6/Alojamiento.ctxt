#BlueJ class context
comment0.target=Alojamiento
comment0.text=\r\n\ Una\ Clase\ abstracta\ que\ permite\ aglomerar\ el\ comportamiento\ comun\ de\ varias\ clases.\r\n\ \r\n\ @author\ Matias\ Grondona\ \r\n\ @version\ 18/10/18\r\n
comment1.params=p_nombre\ p_precio\ p_dias
comment1.target=Alojamiento(java.lang.String,\ double,\ int)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Alojamiento.\r\n\ @param\ \ String\ p_nombre\r\n\ @param\ \ double\ p_precio\r\n\ @param\ \ int\ p_dias\r\n
comment10.params=
comment10.target=int\ getDiasAlquiler()
comment11.params=
comment11.target=java.util.ArrayList\ getServicios()
comment12.params=p_servicio
comment12.target=boolean\ agregarServicio(Servicio)
comment12.text=\r\n\ Agrega\ un\ elemento\ al\ final\ de\ la\ coleccion.\r\n\ @return\ boolean\ retorna\ resultado\ de\ la\ operacion\r\n
comment13.params=p_servicio
comment13.target=boolean\ quitarServicio(Servicio)
comment13.text=\r\n\ Elimina\ un\ elemento\ de\ la\ coleccion.\r\n\ @return\ boolean\ retorna\ resultado\ de\ la\ operacion\r\n
comment14.params=p_alojamiento
comment14.target=int\ contar(java.lang.String)
comment14.text=\r\n\ Metodo\ abstracto\ que\ tiene\ que\ ser\ redefinido\ en\ las\ clases\ hija.\r\n
comment15.params=
comment15.target=double\ costo()
comment15.text=\r\n\ Re\ escribe\ el\ metodo\ costo\ de\ la\ super\ clase\ y\ a\u00F1ade\ el\ extra\ por\ el\ tipo\ de\ Habitacion.\r\n\ @Override\r\n\ @return\ double\ retorna\ el\ costo\ total\ de\ alojamiento.\r\n
comment16.params=
comment16.target=void\ listarServicios()
comment16.text=\r\n\ Imprime\ en\ pantalla\ todos\ los\ servicios\ usados\ en\ el\ alojamiento.\r\n
comment17.params=
comment17.target=double\ costoServicios()
comment17.text=\r\n\ Suma\ el\ costo\ de\ todos\ los\ servicios\ usados\ en\ el\ alojamiento.\r\n\ @return\ double\ retorna\ la\ suma\ del\ costo\ de\ los\ servicios\ usados\r\n
comment18.params=
comment18.target=void\ liquidar()
comment18.text=\r\n\ Imprime\ en\ pantalla,\ con\ un\ formato\ determinado,\ el\ estado\ de\ los\ atributos\ del\ objeto.\r\n
comment2.params=p_nombre\ p_precio\ p_dias\ p_servicio
comment2.target=Alojamiento(java.lang.String,\ double,\ int,\ Servicio)
comment2.text=\r\n\ Constructor\ for\ objects\ of\ class\ Alojamiento.\r\n\ @param\ \ String\ p_nombre\r\n\ @param\ \ double\ p_precio\r\n\ @param\ \ int\ p_dias\r\n\ @param\ \ Servicio\ p_servicio\r\n
comment3.params=p_nombre\ p_precio\ p_dias\ p_servicios
comment3.target=Alojamiento(java.lang.String,\ double,\ int,\ java.util.ArrayList)
comment3.text=\r\n\ Constructor\ for\ objects\ of\ class\ Alojamiento.\r\n\ @param\ \ String\ p_nombre\r\n\ @param\ \ double\ p_precio\r\n\ @param\ \ int\ p_dias\r\n\ @param\ \ ArrayList<Servicio>\ p_servicios\r\n
comment4.params=p_nombre
comment4.target=void\ setNombre(java.lang.String)
comment4.text=\r\n\ Accessors\ de\ la\ clase.\r\n
comment5.params=p_precio
comment5.target=void\ setPrecioBase(double)
comment6.params=p_dias
comment6.target=void\ setDiasAlquiler(int)
comment7.params=p_servicios
comment7.target=void\ setServicios(java.util.ArrayList)
comment8.params=
comment8.target=java.lang.String\ getNombre()
comment9.params=
comment9.target=double\ getPrecioBase()
numComments=19
